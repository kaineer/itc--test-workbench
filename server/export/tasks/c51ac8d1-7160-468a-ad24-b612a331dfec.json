{"title":"Hello, task","template":"//\n","markdown":"# Hello, task\n\n * Первый список\n * Второй список\n\nДлинное описание чего-нибудь маленького и неважного, но требующего изучения. Длинное описание чего-нибудь маленького и неважного, но требующего изучения. Длинное описание чего-нибудь маленького и неважного, но требующего изучения.\n\n\n```js\nconst foo = \"bar\";\n```\n\n1. Numbered list item\n1. Another numbered list item\n","cases":[{"title":"hello должна быть функцией","depends":[],"code":"const { hello } = result;\n\nassertIsFunction(hello, \"hello должна быть функцией\");\n","resultVars":["hello"],"id":"01.js"},{"title":"hello должна возвращать \"world\"","depends":[],"code":"const { hello } = result;\n\nassertEqual(hello(), \"world\", \"hello должна возвращать 'world'\");\n","resultVars":["hello"],"id":"02.js"}],"resultVars":["hello"],"courseRoute":"/course/9b691393-19ae-4aee-b941-2108ea7c9f3c"}