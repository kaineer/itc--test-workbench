{"title":"Числа, тип number","template":"//\n","markdown":"# Числа, тип number\n\n## Объявим несколько констант:\n\n * Константу `year` со значением `2025`\n * Константу `month` со значением `year - 2020`.\n * Константу `dogs` со значением `13`.\n * Константу `cats` со значением `7`.\n * Константу `left` и запишем в нее значение, на которое `dogs` больше чем `cats`.\n\n## Посчитаем\n\n * Запишем в константу `seconds` количество секунд в двух парах по 45 минут\n * Запишем в константу `steps` количество ступенек в 10-этажном здании, если известно, что с этажа на этаж ведет 32 ступеньки\n","cases":[{"title":"`year` должно быть равно `2025`","depends":[],"code":"const { year } = result;\n\nassertEqual(year, 2025, \"Год должен быть указан верно\");\n","resultVars":["year"],"id":"01.js"},{"title":"`month` должно быть равно `5`","depends":[],"code":"const { month } = result;\n\nassertEqual(month, 5, \"Месяц должен быть указан\");\n","resultVars":["month"],"id":"02.js"},{"title":"`dogs` должно быть равно `13`","depends":[],"code":"const { dogs } = result;\n\nassertEqual(dogs, 13);\n","resultVars":["dogs"],"id":"03.js"},{"title":"`cats` должно быть равно `7`","depends":[],"code":"const { cats } = result;\n\nassertEqual(cats, 7);\n","resultVars":["cats"],"id":"04.js"},{"title":"`left` должно быть равно разнице между `dogs` и `cats`","depends":[],"code":"\nconst { left, dogs, cats } = result;\n\nassertIsNumber(dogs);\nassertIsNumber(cats);\nassertEqual(left, dogs - cats);\n","resultVars":["left","dogs","cats"],"id":"05.js"},{"title":"`seconds` должно быть равно количеству секунд в двух парах","depends":[],"code":"const { seconds } = result;\n\nassertEqual(seconds, 2 * 45 * 60);\n","resultVars":["seconds"],"id":"06.js"},{"title":"`steps` должно содержать правильное число ступенек (ступенек между этажами: 32)","depends":[],"code":"\nconst { steps } = result;\n\nassertEqual(steps, (10 - 1) * 32);\n","resultVars":["steps"],"id":"07.js"}],"resultVars":["year","month","dogs","cats","left","seconds","steps"],"courseRoute":"/course/6d88374c-b517-45eb-80a6-6f3b5df106f4"}