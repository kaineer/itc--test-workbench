{"title":"Объекты","template":"// Исходный объект, из него будем дергать свойства\nconst source = {\n  green: \"зеленый\",\n  red: \"красный\",\n  yellow: \"желтый\"\n}\n","markdown":"# Объекты\n\n * Исходный объект `source` не трогаем\n * В константу `green` сохраняем значение из поля `green`\n * В константу `keys` сохраняем список ключей объекта\n * В константу `values` сохраняем список значений объекта (цвета на русском)\n * В константу `railroad` сохраняем копию объекта source с ключом `blue` и значением `синий`\n","cases":[{"title":"Исходный объект `source` не трогаем","depends":[],"code":"\nconst { source } = result;\n\nassertDeepEqual({ green: \"зеленый\", red: \"красный\", yellow: \"желтый\" }, source);\n","resultVars":["source"],"id":"01.js"},{"title":"В константу `green` нужно записать значение из ключа `green`","depends":[],"code":"\nconst { green, source } = result;\n\nassertEqual(source.green, green);\n","resultVars":["green","source"],"id":"02.js"},{"title":"В константу `keys` нужно записать список ключей объекта `source`","depends":[],"code":"\nconst { keys, source } = result;\n\nassertDeepEqual(Object.keys(source), keys);\n","resultVars":["keys","source"],"id":"03.js"},{"title":"В константу `values` нужно записать список значений объекта `source`","depends":[],"code":"\nconst { values, source } = result;\n\nassertDeepEqual(Object.values(source), values);\n","resultVars":["values","source"],"id":"04.js"},{"title":"В константу `railroad` нужно записать копию `source` дополненную парой `{ blue: 'синий' }`","depends":[],"code":"\nconst { railroad, source } = result;\n\nassertDeepEqual({ ...source, blue: \"синий\" }, railroad);\n","resultVars":["railroad","source"],"id":"05.js"}],"resultVars":["source","green","keys","values","railroad"],"courseRoute":"/course/6d88374c-b517-45eb-80a6-6f3b5df106f4"}